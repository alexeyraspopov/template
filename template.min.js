function Binding(a,b,c,d){this.element=b,this.scope=c,this.handler=d,this.type=a,this.handler.routine(b,c,b.dataset)}function observe(a,b,c){var d=b.split("."),e=d.pop()||b;d.length&&(a=d.reduce(function(a,b){return a[b]},a)),Object.observe(a,function(a){a.filter(function(a){return a.name===e}).forEach(function(a){c(a.object[a.name])})}),c(a[e])}function View(a,b){this.element=a,this.scope=b,this.bindings=[],this.compile(),this.bind()}Binding.prototype.bind=function(){this.handler.bind&&this.handler.bind(this.element,this.scope,this.element.dataset)},text=function(a,b,c){observe(b,c.text,function(b){a.textContent=b})},model={routine:function(a,b,c){observe(b,c.model,function(b){a.value=b})},bind:function(a,b,c){a.addEventListener("change",function(){b[c.model]=this.value})}},View.prototype.compile=function(){var a={acceptNode:function(){return NodeFilter.FILTER_ACCEPT}},b=document.createTreeWalker(this.element,NodeFilter.SHOW_ELEMENT,a,!1),c=b.currentNode;do this.createBindings(c),c=b.nextNode();while(c)},View.prototype.createBindings=function(a){Object.keys(a.dataset).filter(function(a){return!!window[a]}).forEach(function(b){this.bindings.push(new Binding(b,a,this.scope,this.handler(b)))},this)},View.prototype.handler=function(a){return window[a]instanceof Function?{routine:window[a]}:window[a]},View.prototype.bind=function(){this.bindings.forEach(function(a){a.bind()})};